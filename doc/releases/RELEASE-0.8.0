 RELEASE 0.8.0
---------------

- Threads are created with a descriptive name, to make more useful the
  information given by tools like jconsole.
  
- Starting and configuring the JMX server is done within the standard
  Scoja configuration files.
  The command "monitor" launches a monitor;
  reloading the configuration, relaunches the monitor with the new
  parameters.
  Documentation and code gotten from:
  http://java.sun.com/javase/6/docs/technotes/guides/management/faq.html#rmi1
 http://java.sun.com/javase/6/docs/technotes/guides/management/agent.html#gdfvv

- More statistical info.

- Better buffers for file targets.

- An index out of range in StdSyslogEventParser.

- Change to Jython 2.5.2
  jython.jar is no longer in the repository.
  A local jython installation is required to copy jython runtime.
  This is why we jump from 0.7.0 to 0.8.0

- Jython is run with a very restrictive policy.
  This ensures that no hijacking can be done with a malicious Scoja native
  configuration file.
  
- EventQueue has a method waitCurrent to wait (at least) until all currently
  pending events has been completelly processed.

  
 TODO
------

- En StdSyslogEventParser.trim: cambiar el paso de bytes a char por un CharSet.
  Esto hay que probar cómo influye en los rendimientos.
  
- Consider to substitute NIO code with Grizzly or QuickServer.

- Configurable parsers. At least, a way to configure white space trimming.

- Accept several events in one UDP packet.

- A faster Scoja native configuration files load code.

- A pool of open server sockets.
  Configuration files don't open/close this objects directly.
  So reloading updated configuration files doesn't have problems with
  still opened sockets.
  
- What about message enconding?
  Now code supposes that Latin1 encoding is used.
  This should be configurable for the message body.

- Translate this fucking proyect to english.

- A lot of JUnit tests.

- mapping should have a fail mode: if key is not found, event will not pass.
  There is a problem to implement this functionality:
  mapping are expression and only links can block events.
  The simplest solution is to return a null to mark that the expression
  evaluation failed and the event cannot pass.

- useSendTimestamp should change default timestamp only for the logging
  net following this action.
  
- Avoid all Python composition at Java code.
  It is easier to cover Java objects with Python object that take care
  of link and expression composition.

- Recoja:
  Set user, group and mode of the generated files.
  
- SSL, in Scoja and events routing.

- Acoja utility.

- xSockets can be a good base for network sources.

- See rsyslog.

- RELP: Reliable Event Logging Protocol.

- Netflow

- SNMP

- WebSockets to do data transfer through a proxy.
